class Solution {
    public String findDifferentBinaryString(String[] nums) {

        Map<String, Boolean> mp = new HashMap<>();

        for(String s : nums){
            mp.put(s, true);
        }

        int n = (int)Math.pow(2, nums.length);

        for(int i=0; i<n; i++){
            String bin = binToString(i, nums.length);

            if(!mp.containsKey(bin)){
                return bin;
            }
        }

        return "";
    }

    public String binToString(int n, int len){
        StringBuilder sb = new StringBuilder();

        while(n!=0){
            if((n&1) == 1){
                sb.append("1");
            }
            else{
                sb.append("0");
            }

            n>>=1;
        }

        while(sb.length() != len){
            sb.append("0");
        }

        sb.reverse();
        return sb.toString();
    }
}
