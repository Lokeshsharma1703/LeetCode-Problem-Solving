Given a string S, find the longest palindromic substring in S. Substring of string S: S[ i . . . . j ] where 0 ≤ i ≤ j < len(S). Palindrome string: A string that reads the same backward. More formally, S is a palindrome if reverse(S) = S. In case of conflict, return the substring which occurs first ( with the least starting index).

Example 1:

Input:
S = "aaaabbaa"
Output: aabbaa
Explanation: The longest Palindromic
substring is "aabbaa".
Example 2:

Input: 
S = "abc"
Output: a
Explanation: "a", "b" and "c" are the 
longest palindromes with same length.
The result is the one with the least
starting index.
Your Task:
You don't need to read input or print anything. Your task is to complete the function longestPalin() which takes the string S as input and returns the longest palindromic substring of S.

Expected Time Complexity: O(|S|2).
Expected Auxiliary Space: O(1).

Constraints:
1 ≤ |S| ≤ 103


link - https://practice.geeksforgeeks.org/problems/longest-palindrome-in-a-string3411/1

----------------------------------------------------------------------------------------------------------------------------------------

class Solution{
    static String longestPalin(String s){
        int n = s.length();
        int mx = 0;
        int end = 0;
        int start = 0; 
        for(int i = 0; i<n;i++){
            int l = i;
            int r = i;
            while(l>=0 && r<n && s.charAt(l)==s.charAt(r)){
                l--;
                r++;
            }
            r--;
            l++;
            int k = r-l+1;
            if(k>mx){
                mx = k;
                end = r;
                start = l;
            }
        }
         for(int i = 0; i<n;i++){
            int l = i-1;
            int r = i;
            while(l>=0 && r<n && s.charAt(l)==s.charAt(r)){
                l--;
                r++;
            }
            r--;
            l++;
            int k = r-l+1;
            if(k>mx){
                mx = k;
                end = r;
                start = l;
            }
        }
        String ans = "";
        for(int i = start; i<=end; i++)ans += s.charAt(i);
        return ans ;
        
    }
}
