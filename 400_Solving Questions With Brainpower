class Solution {
    public long mostPoints(int[][] questions) {
        // long[] dp = new long[questions.length+1];
        // return points(questions, 0, dp);
        return points2(questions);
    }

    private static long points2(int[][] questions){
        long[] dp = new long[questions.length+1];

        for(int i=questions.length-1;i>=0; i--){
            long take = questions[i][0] + dp[Math.min(questions.length, i+questions[i][1]+1)];
            long nottake = dp[i+1];

            dp[i] = Math.max(take, nottake);
        }

        return dp[0];
    }

    private static long points(int[][] questions, int i, long[] dp){
        if(i>=questions.length){
            return 0;
        }
        
        if(dp[i]!=0){
            return dp[i];
        }

        long take = questions[i][0] + points(questions, i+questions[i][1]+1, dp);
        long nottake = points(questions, i+1, dp);

        return dp[i] = Math.max(take, nottake);
    }
}
