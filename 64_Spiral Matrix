import java.util.List;

/*
 * @lc app=leetcode id=54 lang=java
 *
 * [54] Spiral Matrix
 */

// @lc code=start
class Solution {
    public List<Integer> spiralOrder(int[][] matrix) {
        List<Integer> res = new ArrayList<>();
        int rmin = 0;
        int rmax = matrix.length - 1;
        int cmin = 0;
        int cmax = matrix[0].length - 1;
        int count = 0;
        int total = matrix.length * matrix[0].length;
        while (count < total) {
            for (int i = cmin; i <= cmax && count < total; i++) {
                res.add(matrix[rmin][i]);
                count++;
            }
            rmin++;
            for (int i = rmin; i <= rmax && count < total; i++) {
                res.add(matrix[i][cmax]);
                count++;
            }
            cmax--;
            for (int i = cmax; i >= cmin && count < total; i--) {
                res.add(matrix[rmax][i]);
                count++;
            }
            rmax--;
            for (int i = rmax; i >= rmin && count < total; i--) {
                res.add(matrix[i][cmin]);
                count++;
            }
            cmin++;
        }
        return res;
    }
}
// @lc code=end
