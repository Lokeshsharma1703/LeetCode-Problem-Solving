class LRUCache {

    int max;
    LinkedHashMap<Integer, Integer> mp = new LinkedHashMap<>();
    int LRU;

    public LRUCache(int capacity) {
        this.max = capacity;
        this.LRU = -1;
    }
    
    public int get(int key) {
        if(mp.get(key)==null){
            return -1;
        }

        int val = mp.get(key);
        mp.remove(key);
        mp.put(key, val);
        return val;
    }
    
    public void put(int key, int value) {
        if(mp.containsKey(key)){
            mp.remove(key);
            max++;
        }
        else if(max==0){
            mp.remove(mp.keySet().iterator().next());
            max++;
        }

        mp.put(key, value);
        max--;
    }
}

/**
 * Your LRUCache object will be instantiated and called as such:
 * LRUCache obj = new LRUCache(capacity);
 * int param_1 = obj.get(key);
 * obj.put(key,value);
 */
