You are given an array of strings arr of size n. You have to find out if it is possible to make a palindromic string by concatenating the strings in any order. Provided that all the strings given in the array are of equal length.

Example 1:

Input:
n = 4
arr = {"djfh", "gadt", "hfjd", "tdag"}
Output:
YES
Explanation:
You can make the string "djfhgadttdaghfjd", by concatenating the given strings which is a palindrome.
Example 2:

Input:
n = 3
arr = {"jhjdf", "sftas", "fgsdf"}
Output:
NO
Explanation:
You can't make a palindromic string with this strings.
Your Task:
You don't need to read input or print anything. Your task is to complete the function makePalindrome() which takes an integer n and an array of strings arr respectively and returns true or false.

Expected Time Complexity: O(n * len(arr[i]))
Expected Space Complexity: O(n * len(arr[i]))

Constraints:
1 <= n <= 104
0 <= |arr[i]| <= 104
The sum of n*|arr[i]| over all test cases won't exceed 106


link - https://practice.geeksforgeeks.org/problems/8d0e8785cef59cf4903b926ceb7100bcd16a9835/1

--------------------------------------------------------------------------------------------------------------------------------------------------------------


class Solution {
    public static boolean palindrome(String str)
    {
        int low=0,high=str.length()-1;
        
        while(low<high)
        {
            if(str.charAt(low++)!=str.charAt(high--))
            return false;
        }
        
        return true;
    }
    public static boolean makePalindrome(int n, String[] arr) {
        Map<String, Integer> map = new HashMap<>();
        Map<String,Integer> palins=new HashMap<>();
        
        for (int i = 0; i < n; i++) {
            String str = arr[i];
            map.put(str, map.getOrDefault(str, 0) + 1);
        }
    
        int cnt=0;
        for (int i = 0; i < n; i++) {
            if(!palindrome(arr[i])){
                String str = arr[i];
                String rev = new StringBuffer(str).reverse().toString();
        
                if (!map.get(str).equals(map.get(rev))) {
                        return false;
                }
            }
            else
            {
                palins.put(arr[i],palins.getOrDefault(arr[i],0)+1);
            }
        
        }
        
        for(var freq:palins.values())
        {
            if(freq%2==1) cnt++; 
        }
        
        
    
        return cnt<=1;
    }
}
        
