Given a string of digits, the task is to check if it is a ‘sum-string’. A string S is called a sum-string when it is broken down into more than one substring and the rightmost substring can be written as a sum of two substrings before it and the same is recursively true for substrings before it.

Example 1:

Input:
S = "12243660"
Output:
1
Explanation:
"12243660" can be broken down as {"12", "24", "36", "60"}.
We can get 60 from 24 and 36 as 24 + 36 = 60. Similarly 36 can be written as 12 + 24.
Example 2:

Input:
1111112223
Output:
1
Explanation:
"1111112223" can be broken down as {"1", "111", "112", "223"}.
We can get 223 from 111 and 1112 as 111 + 112 = 223. Similarly 112 can be written as 1 + 111.
Your Task:

You don't need to read input or print anything. Your task is to complete the function isSumString() which takes the string S and returns 1 is S is a sum-string otherwise returns 0.

Expected Time Complexity: O(|S|3)
Expected Auxiliary Space: O(|S|)

Constraints:
1 <= |S| <= 500
String consists of characters from '0' to '9'.


link - https://www.geeksforgeeks.org/problems/sum-string3151/1

--------------------------------------------------------------------------------------------------------------------------------------

class Solution{
    public int isSumString(String S){
        int n = S.length();
        
        for(int i=1; i<n-2; i++){
            for(int j=i+1; j<n-1; j++){
                
                String a = S.substring(0, i);
                String b = S.substring(i, j);
                
                if(isPossible(a, b, S.substring(j))){
                    return 1;
                }
                
            }
        }
        
        return 0;
    }
    
    public boolean isPossible(String a, String b, String s){
        if(s.isEmpty()){
            return true;
        }
        
        String sum = calculateSum(a, b);
        if(s.startsWith(sum)){
            return isPossible(b, sum, s.substring(sum.length()));
        }
        
        return false;
    }
    
    public String calculateSum(String a, String b){
        StringBuilder sb = new StringBuilder();
        
        int i = a.length()-1;
        int j = b.length()-1;
        int sum = 0;
        int carry = 0;
        int rem = 0;
        
        while(i>=0 || j>=0 || carry==1){
            sum = (i>=0 ? a.charAt(i--)-'0' : 0) + (j>=0 ? b.charAt(j--)-'0' : 0) + carry;
            rem = sum % 10;
            carry = sum / 10;
            sb.append(rem);
        }
        
        sb.reverse();
        return sb.toString();
    }
    
    
}
