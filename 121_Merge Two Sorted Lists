import java.util.List;

/*
 * @lc app=leetcode id=21 lang=java
 *
 * [21] Merge Two Sorted Lists
 */

// @lc code=start
/**
 * Definition for singly-linked list.
 * public class ListNode {
 * int val;
 * ListNode next;
 * ListNode() {}
 * ListNode(int val) { this.val = val; }
 * ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode mergeTwoLists(ListNode list1, ListNode list2) {
        ListNode head = new ListNode(0);
        ListNode curr = head;
        while (list1 != null && list2 != null) {
            ListNode temp = null;
            if (list1.val < list2.val) {
                temp = new ListNode(list1.val);
                list1 = list1.next;
            } else {
                temp = new ListNode(list2.val);
                list2 = list2.next;
            }
            curr.next = temp;
            curr = curr.next;
        }
        while (list1 != null) {
            ListNode temp = new ListNode(list1.val);
            list1 = list1.next;
            curr.next = temp;
            curr = curr.next;
        }
        while (list2 != null) {
            ListNode temp = new ListNode(list2.val);
            list2 = list2.next;
            curr.next = temp;
            curr = curr.next;
        }
        return head.next;
    }
}
// @lc code=end
