/*
 * @lc app=leetcode id=5 lang=java
 *
 * [5] Longest Palindromic Substring
 */

// @lc code=start
class Solution {
    public String longestPalindrome(String s) {
        String res = "";
        for (int i = 0; i < s.length(); i++) {
            int si = i;
            int ei = i;
            while (si >= 0 && ei < s.length() && s.charAt(si) == s.charAt(ei)) {
                if (s.substring(si, ei + 1).length() > res.length())
                    res = s.substring(si, ei + 1);
                si--;
                ei++;
            }
            int si2 = i;
            int ei2 = i + 1;
            while (si2 >= 0 && ei2 < s.length() && s.charAt(si2) == s.charAt(ei2)) {
                if (s.substring(si2, ei2 + 1).length() > res.length())
                    res = s.substring(si2, ei2 + 1);
                si2--;
                ei2++;
            }
        }
        return res;
    }
}
// @lc code=end
