class Solution {
    public long minimumTime(int[] time, int totalTrips) {
        long low = Long.MAX_VALUE;
        long high = 0;
        long min = Long.MAX_VALUE;
        for(int i=0;i<time.length;i++){
            min = Math.min(min, time[i]);
        }
        low = min;
        high = min * totalTrips;

        while(low<high){
            long mid = (low + high)/2;
            if(isPossible(mid, totalTrips, time)){
                high = mid;
            }
            else{
                low = mid+1;
            }
        }
        return low;
    }

    private boolean isPossible(long mid, int totalTrips, int[] time){
        long trips = 0;
        for(int i=0;i<time.length;i++){
            trips += mid/time[i];
        }
        if(trips>=totalTrips){
            return true;
        }
        return false;
    }
}
