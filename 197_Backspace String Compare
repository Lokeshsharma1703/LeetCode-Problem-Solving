class Solution {
    public boolean backspaceCompare(String s, String t) {
        Stack<Character> st = new Stack<>();
        Stack<Character> tt = new Stack<>();

        for(int i=0; i<s.length(); i++){
            if(s.charAt(i)=='#'){
                if(!st.isEmpty()){
                    st.pop();
                }
            }
            else{
                st.push(s.charAt(i));
            }
        }

        for(int i=0; i<t.length(); i++){
            if(t.charAt(i)=='#'){
                if(!tt.isEmpty()){
                    tt.pop();
                }
            }
            else{
                tt.push(t.charAt(i));
            }
        }

        if(st.size() != tt.size()){
            return false;
        }

        while(!st.isEmpty()){
            if(st.pop() != tt.pop()){
                return false;
            }
        }

        return true;
    }
}

============================================================================================================

class Solution {
    public boolean backspaceCompare(String s, String t) {
        Stack<Character> s1 = new Stack<>();
        Stack<Character> s2 = new Stack<>();
        for(int i=0;i<s.length();i++){
            if(s1.isEmpty() && s.charAt(i)=='#'){
                continue;
            }
            if(!s1.isEmpty() && s.charAt(i)=='#'){
                s1.pop();
            }
            else{
                s1.push(s.charAt(i));
            }
        }
        for(int i=0;i<t.length();i++){
            if(s2.isEmpty() && t.charAt(i)=='#'){
                continue;
            }
            if(!s2.isEmpty() && t.charAt(i)=='#'){
                s2.pop();
            }
            else{
                s2.push(t.charAt(i));
            }
        }
        if(s1.size()!=s2.size()){
            return false;
        }
        for(int i=0;i<s1.size();i++){
            if(s1.get(i)!=s2.get(i)){
                return false;
            }
        }
        return true;
    }
}
