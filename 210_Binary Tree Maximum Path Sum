/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    int res = Integer.MIN_VALUE;
    public int maxPathSum(TreeNode root) {
        findMaximumSum(root);
        return res;
    }
    public int findMaximumSum(TreeNode root){
        if(root==null){
            return 0;
        }
        int left = findMaximumSum(root.left);
        int right = findMaximumSum(root.right);
        int max = Math.max(root.val, Math.max(root.val+left, Math.max(root.val+right, root.val+left+right)));
        if(max>res){
            res = max;
        }
        return root.val>root.val+Math.max(left, right) ? root.val : root.val+Math.max(left, right);
    }
}
