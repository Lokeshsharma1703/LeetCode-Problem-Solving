/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<TreeNode> allPossibleFBT(int n) {
        List<TreeNode> res = new ArrayList<>();

        if(n==0 || n%2==0){
            return res;
        }

        if(n==1){
            res.add(new TreeNode(0));
            return res;
        }

        for(int i=0; i<n; i++){
            List<TreeNode> lft = allPossibleFBT(i);
            List<TreeNode> rgt = allPossibleFBT(n-i-1);

            for(TreeNode left : lft){
                for(TreeNode right : rgt){
                    TreeNode curr = new TreeNode(0);
                    curr.left = left;
                    curr.right = right;
                    res.add(curr);
                }
            }
        }

        return res;
    }
}
