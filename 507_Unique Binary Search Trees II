/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<TreeNode> generateTrees(int n) {
        return generate(1, n);
    }

    private static List<TreeNode> generate(int si, int ei){
        if(si > ei){
            List<TreeNode> res = new ArrayList<>();
            res.add(null);
            return res;
        }

        List<TreeNode> res = new ArrayList<>();

        for(int i=si; i<=ei; i++){
            List<TreeNode> lft = generate(si, i-1);
            List<TreeNode> rgt = generate(i+1, ei);

            for(TreeNode left : lft){
                for(TreeNode right : rgt){
                    TreeNode curr = new TreeNode(i);
                    curr.left = left;
                    curr.right = right;
                    res.add(curr);
                }
            }
        }

        return res;
    }
}
