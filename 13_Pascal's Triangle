================================== First Approach ======================================

class Solution {
    public List<List<Integer>> generate(int numRows) {
        List<List<Integer>> res = new ArrayList<>();

        for(int i=0; i<numRows; i++){
            List<Integer> list = new ArrayList<>();
            int val = 1;
            for(int j=0; j<=i; j++){
                list.add(val);

                val = (val * (i-j))/(j+1);
            }

            res.add(list);
        }

        return res;
    }
}

=============================== Second Approach =========================================

class Solution {
    public List<List<Integer>> generate(int numRows) {
        int[][] temp = new int[numRows][numRows];
        for(int i=0;i<numRows;i++)
        {
            temp[i][0] = temp[i][i] = 1;
        }
        for(int i=2;i<numRows;i++)
        {
            for(int j=1;j<i;j++)
            {
                temp[i][j] = temp[i-1][j-1] + temp[i-1][j];
            }
        }
        List<List<Integer>> res = new ArrayList<List<Integer>>();
        for(int i=0;i<numRows;i++)
        {
            List<Integer> arr = new ArrayList<Integer>();
            for(int j=0;j<=i;j++)
            {
                arr.add(temp[i][j]);
            }
            res.add(arr);
        }
        return res;
    }
}
