class Solution {
    public int numRollsToTarget(int n, int k, int target) {
        int[][] dp = new int[n+1][1000];
        for(int[] arr : dp){
            Arrays.fill(arr, -1);
        }

        return helper(n, k, target, dp);
    }

    public static int helper(int n, int k, int target, int[][] dp){
        if(n==0 && target==0){
            return 1;
        }
        if(target <= 0){
            return 0;
        }
        if(n<=0){
            return 0;
        }
        if(dp[n][target] != -1){
            return dp[n][target];
        }

        int res = 0;
        for(int i=1; i<=k; i++){
            res += (helper(n-1, k, target-i, dp) % 1000_000_007);
            res = res % 1000_000_007;
        }

        return dp[n][target] = res;
    }
}
