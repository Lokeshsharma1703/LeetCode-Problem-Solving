/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public int longestZigZag(TreeNode root) {
        return dfs(root)[2];
    }

    private static int[] dfs(TreeNode root){
        if(root==null){
            return new int[]{-1, -1, -1};
        }

        int[] lft = dfs(root.left);
        int[] rgt = dfs(root.right);

        int lftLen = lft[1] + 1;
        int rgtLen = rgt[0] + 1;

        int max = Math.max(Math.max(lftLen, rgtLen), Math.max(lft[2], rgt[2]));

        return new int[]{lftLen, rgtLen, max};
    }
}
