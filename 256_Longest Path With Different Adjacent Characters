class Solution {
    int res = 0;
    public int longestPath(int[] parent, String s) {
        int n = parent.length;
        List<Integer>[] graph = new ArrayList[n];

        for(int i=0;i<n;i++){
            graph[i] = new ArrayList<>(); 
        }

        for(int i=1;i<n;i++){
            graph[parent[i]].add(i);
        }

        longestPath(graph, 0, s);

        return res;
    }
    private int longestPath(List<Integer>[] graph, int idx, String s){
        int m1 = 0;
        int m2 = 0;

        for(int i : graph[idx]){
            int ans = longestPath(graph, i, s);
            if(s.charAt(idx)==s.charAt(i)){
                continue;
            }
            if(ans > m1){
                m2 = m1;
                m1 = ans;
            }
            else if(ans > m2){
                m2 = ans;
            }
        }
        res = Math.max(res, 1+m1+m2);
        return 1+m1;
    }
}
