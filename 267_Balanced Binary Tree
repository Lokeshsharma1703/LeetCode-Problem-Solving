/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public boolean isBalanced(TreeNode root) {
        if(root==null){
            return true;
        }
        boolean lft = isBalanced(root.left);
        boolean rgt = isBalanced(root.right);
        boolean curr = Math.abs(height(root.left)-height(root.right))<=1;
        return lft && rgt && curr;
    }
    private int height(TreeNode node){
        if(node==null){
            return -1;
        }
        int lheight = height(node.left);
        int rheight = height(node.right);
        return Math.max(lheight, rheight)+1;
    }
}
