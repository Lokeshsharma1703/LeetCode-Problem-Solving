Given an array A of size N. The elements of the array consist of positive integers. You have to find the largest element with minimum frequency.

Example 1:

Input: 
5
2 2 5 50 1
Output:
50
Explanation :
All elements are having frequency 1 except 2.
50 is the maximum element with minimum frequency.
Example 2:

Input:
4
3 3 5 5
Output:
5
Explanation:
Both 3 and 5 have the same frequency, so 5 should be returned.
User Task:
Your task is to complete the provided function LargButMinFreq(A, n) which accepts array A and n. Hence you have to return the largest element with minimum frequency.

Expected Time Complexity: O(N)
Expected Space Complexity: O(N)

Constraints:
1 <= N <= 105
1 <= A[i] <= 106


link - https://practice.geeksforgeeks.org/problems/frequency-game/1

-----------------------------------------------------------------------------------------------------------------------------------------

class Solution {
    public static int LargButMinFreq(int arr[], int n) {
        HashMap<Integer, Integer> mp = new HashMap<>();
        
        for(int i=0;i<n;i++){
            int x = arr[i];
            if(mp.containsKey(x)){
                mp.put(x, mp.get(x)+1);
            }
            else{
                mp.put(x, 1);
            }
        }
        
        int max = Integer.MAX_VALUE;
        int res = 0;
        for(int i : mp.keySet()){
            if(max >= mp.get(i)){
                if(i > res){
                    res = i;
                    max = mp.get(i);
                }
            }
        }
        
        return res;
    }
}
