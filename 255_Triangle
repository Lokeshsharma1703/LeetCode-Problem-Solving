class Solution {
    public int minimumTotal(List<List<Integer>> triangle) {
        int[][] dp = new int[triangle.size()][triangle.get(triangle.size() - 1).size()];
        dp[0][0] = triangle.get(0).get(0);
        for (int i = 0; i < triangle.size() - 1; i++) {
            List<Integer> curr = triangle.get(i);
            List<Integer> next = triangle.get(i + 1);
            for (int j = 0; j < curr.size(); j++) {
                int sum = dp[i][j];
                if (j == 0) {
                    dp[i + 1][j] = sum + next.get(j);
                } else {
                    dp[i + 1][j] = Math.min(dp[i + 1][j], sum + next.get(j));
                }
                dp[i + 1][j + 1] = sum + next.get(j + 1);
            }
        }
        int min = Integer.MAX_VALUE;
        for (int i : dp[dp.length - 1]) {
            if(i<min){
                min = i;
            }
        }
        return min;
    }
}
